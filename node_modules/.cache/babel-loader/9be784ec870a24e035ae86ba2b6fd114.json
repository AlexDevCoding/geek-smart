{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\GitHub\\\\geek-smart\\\\src\\\\components\\\\time-line.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Radio, Timeline } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Timeli = () => {\n  _s();\n\n  const [mode, setMode] = useState('left');\n\n  const onChange = e => {\n    setMode(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Radio.Group, {\n      onChange: onChange,\n      value: mode,\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(Radio, {\n        value: \"left\",\n        children: \"Left\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Radio, {\n        value: \"right\",\n        children: \"Right\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Radio, {\n        value: \"alternate\",\n        children: \"Alternate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Timeline, {\n      mode: mode,\n      items: [{\n        label: '2015-09-01',\n        children: 'Create a services'\n      }, {\n        label: '2015-09-01 09:12:11',\n        children: 'Solve initial network problems'\n      }, {\n        children: 'Technical testing'\n      }, {\n        label: '2015-09-01 09:12:11',\n        children: 'Network problems being solved'\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Timeli, \"8WMgJJirgFW2i3P/jfNMcNICKV4=\");\n\n_c = Timeli;\nexport default Timeli;\n\nvar _c;\n\n$RefreshReg$(_c, \"Timeli\");","map":{"version":3,"sources":["C:/Users/david/Documents/GitHub/geek-smart/src/components/time-line.jsx"],"names":["React","useState","Radio","Timeline","Timeli","mode","setMode","onChange","e","target","value","marginBottom","label","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,MAAhC;;;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,MAAD,CAAhC;;AACA,QAAMM,QAAQ,GAAIC,CAAD,IAAO;AACtBF,IAAAA,OAAO,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AACD,GAFD;;AAGA,sBACE;AAAA,4BACE,QAAC,KAAD,CAAO,KAAP;AACE,MAAA,QAAQ,EAAEH,QADZ;AAEE,MAAA,KAAK,EAAEF,IAFT;AAGE,MAAA,KAAK,EAAE;AACLM,QAAAA,YAAY,EAAE;AADT,OAHT;AAAA,8BAOE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAQE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eASE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,QAAD;AACE,MAAA,IAAI,EAAEN,IADR;AAEE,MAAA,KAAK,EAAE,CACL;AACEO,QAAAA,KAAK,EAAE,YADT;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OADK,EAKL;AACED,QAAAA,KAAK,EAAE,qBADT;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OALK,EASL;AACEA,QAAAA,QAAQ,EAAE;AADZ,OATK,EAYL;AACED,QAAAA,KAAK,EAAE,qBADT;AAEEC,QAAAA,QAAQ,EAAE;AAFZ,OAZK;AAFT;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AAmCD,CAxCD;;GAAMT,M;;KAAAA,M;AAyCN,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { Radio, Timeline } from 'antd';\r\nconst Timeli = () => {\r\n  const [mode, setMode] = useState('left');\r\n  const onChange = (e) => {\r\n    setMode(e.target.value);\r\n  };\r\n  return (\r\n    <>\r\n      <Radio.Group\r\n        onChange={onChange}\r\n        value={mode}\r\n        style={{\r\n          marginBottom: 20,\r\n        }}\r\n      >\r\n        <Radio value=\"left\">Left</Radio>\r\n        <Radio value=\"right\">Right</Radio>\r\n        <Radio value=\"alternate\">Alternate</Radio>\r\n      </Radio.Group>\r\n      <Timeline\r\n        mode={mode}\r\n        items={[\r\n          {\r\n            label: '2015-09-01',\r\n            children: 'Create a services',\r\n          },\r\n          {\r\n            label: '2015-09-01 09:12:11',\r\n            children: 'Solve initial network problems',\r\n          },\r\n          {\r\n            children: 'Technical testing',\r\n          },\r\n          {\r\n            label: '2015-09-01 09:12:11',\r\n            children: 'Network problems being solved',\r\n          },\r\n        ]}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default Timeli ;"]},"metadata":{},"sourceType":"module"}