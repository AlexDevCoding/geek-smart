{"ast":null,"code":"export const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    controlHeight,\n    controlHeightSM,\n    controlHeightLG,\n    paddingXXS,\n    controlPaddingHorizontal,\n    zIndexPopupBase,\n    colorText,\n    fontWeightStrong,\n    controlItemBgActive,\n    controlItemBgHover,\n    colorBgContainer,\n    colorFillSecondary,\n    colorBgContainerDisabled,\n    colorTextDisabled\n  } = token; // Item height default use `controlHeight - 2 * paddingXXS`,\n  // but some case `paddingXXS=0`.\n  // Let's fallback it.\n\n  const dblPaddingXXS = paddingXXS * 2;\n  const dblLineWidth = lineWidth * 2;\n  const multipleItemHeight = Math.min(controlHeight - dblPaddingXXS, controlHeight - dblLineWidth);\n  const multipleItemHeightSM = Math.min(controlHeightSM - dblPaddingXXS, controlHeightSM - dblLineWidth);\n  const multipleItemHeightLG = Math.min(controlHeightLG - dblPaddingXXS, controlHeightLG - dblLineWidth); // FIXED_ITEM_MARGIN is a hardcode calculation since calc not support rounding\n\n  const INTERNAL_FIXED_ITEM_MARGIN = Math.floor(paddingXXS / 2);\n  return {\n    INTERNAL_FIXED_ITEM_MARGIN,\n    zIndexPopup: zIndexPopupBase + 50,\n    optionSelectedColor: colorText,\n    optionSelectedFontWeight: fontWeightStrong,\n    optionSelectedBg: controlItemBgActive,\n    optionActiveBg: controlItemBgHover,\n    optionPadding: `${(controlHeight - fontSize * lineHeight) / 2}px ${controlPaddingHorizontal}px`,\n    optionFontSize: fontSize,\n    optionLineHeight: lineHeight,\n    optionHeight: controlHeight,\n    selectorBg: colorBgContainer,\n    clearBg: colorBgContainer,\n    singleItemHeightLG: controlHeightLG,\n    multipleItemBg: colorFillSecondary,\n    multipleItemBorderColor: 'transparent',\n    multipleItemHeight,\n    multipleItemHeightSM,\n    multipleItemHeightLG,\n    multipleSelectorBgDisabled: colorBgContainerDisabled,\n    multipleItemColorDisabled: colorTextDisabled,\n    multipleItemBorderColorDisabled: 'transparent',\n    showArrowPaddingInlineEnd: Math.ceil(token.fontSize * 1.25)\n  };\n};","map":{"version":3,"sources":["C:/Users/david/Documents/geek-smart-ser/node_modules/antd/es/select/style/token.js"],"names":["prepareComponentToken","token","fontSize","lineHeight","lineWidth","controlHeight","controlHeightSM","controlHeightLG","paddingXXS","controlPaddingHorizontal","zIndexPopupBase","colorText","fontWeightStrong","controlItemBgActive","controlItemBgHover","colorBgContainer","colorFillSecondary","colorBgContainerDisabled","colorTextDisabled","dblPaddingXXS","dblLineWidth","multipleItemHeight","Math","min","multipleItemHeightSM","multipleItemHeightLG","INTERNAL_FIXED_ITEM_MARGIN","floor","zIndexPopup","optionSelectedColor","optionSelectedFontWeight","optionSelectedBg","optionActiveBg","optionPadding","optionFontSize","optionLineHeight","optionHeight","selectorBg","clearBg","singleItemHeightLG","multipleItemBg","multipleItemBorderColor","multipleSelectorBgDisabled","multipleItemColorDisabled","multipleItemBorderColorDisabled","showArrowPaddingInlineEnd","ceil"],"mappings":"AAAA,OAAO,MAAMA,qBAAqB,GAAGC,KAAK,IAAI;AAC5C,QAAM;AACJC,IAAAA,QADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA,aAJI;AAKJC,IAAAA,eALI;AAMJC,IAAAA,eANI;AAOJC,IAAAA,UAPI;AAQJC,IAAAA,wBARI;AASJC,IAAAA,eATI;AAUJC,IAAAA,SAVI;AAWJC,IAAAA,gBAXI;AAYJC,IAAAA,mBAZI;AAaJC,IAAAA,kBAbI;AAcJC,IAAAA,gBAdI;AAeJC,IAAAA,kBAfI;AAgBJC,IAAAA,wBAhBI;AAiBJC,IAAAA;AAjBI,MAkBFjB,KAlBJ,CAD4C,CAoB5C;AACA;AACA;;AACA,QAAMkB,aAAa,GAAGX,UAAU,GAAG,CAAnC;AACA,QAAMY,YAAY,GAAGhB,SAAS,GAAG,CAAjC;AACA,QAAMiB,kBAAkB,GAAGC,IAAI,CAACC,GAAL,CAASlB,aAAa,GAAGc,aAAzB,EAAwCd,aAAa,GAAGe,YAAxD,CAA3B;AACA,QAAMI,oBAAoB,GAAGF,IAAI,CAACC,GAAL,CAASjB,eAAe,GAAGa,aAA3B,EAA0Cb,eAAe,GAAGc,YAA5D,CAA7B;AACA,QAAMK,oBAAoB,GAAGH,IAAI,CAACC,GAAL,CAAShB,eAAe,GAAGY,aAA3B,EAA0CZ,eAAe,GAAGa,YAA5D,CAA7B,CA3B4C,CA4B5C;;AACA,QAAMM,0BAA0B,GAAGJ,IAAI,CAACK,KAAL,CAAWnB,UAAU,GAAG,CAAxB,CAAnC;AACA,SAAO;AACLkB,IAAAA,0BADK;AAELE,IAAAA,WAAW,EAAElB,eAAe,GAAG,EAF1B;AAGLmB,IAAAA,mBAAmB,EAAElB,SAHhB;AAILmB,IAAAA,wBAAwB,EAAElB,gBAJrB;AAKLmB,IAAAA,gBAAgB,EAAElB,mBALb;AAMLmB,IAAAA,cAAc,EAAElB,kBANX;AAOLmB,IAAAA,aAAa,EAAG,GAAE,CAAC5B,aAAa,GAAGH,QAAQ,GAAGC,UAA5B,IAA0C,CAAE,MAAKM,wBAAyB,IAPvF;AAQLyB,IAAAA,cAAc,EAAEhC,QARX;AASLiC,IAAAA,gBAAgB,EAAEhC,UATb;AAULiC,IAAAA,YAAY,EAAE/B,aAVT;AAWLgC,IAAAA,UAAU,EAAEtB,gBAXP;AAYLuB,IAAAA,OAAO,EAAEvB,gBAZJ;AAaLwB,IAAAA,kBAAkB,EAAEhC,eAbf;AAcLiC,IAAAA,cAAc,EAAExB,kBAdX;AAeLyB,IAAAA,uBAAuB,EAAE,aAfpB;AAgBLpB,IAAAA,kBAhBK;AAiBLG,IAAAA,oBAjBK;AAkBLC,IAAAA,oBAlBK;AAmBLiB,IAAAA,0BAA0B,EAAEzB,wBAnBvB;AAoBL0B,IAAAA,yBAAyB,EAAEzB,iBApBtB;AAqBL0B,IAAAA,+BAA+B,EAAE,aArB5B;AAsBLC,IAAAA,yBAAyB,EAAEvB,IAAI,CAACwB,IAAL,CAAU7C,KAAK,CAACC,QAAN,GAAiB,IAA3B;AAtBtB,GAAP;AAwBD,CAtDM","sourcesContent":["export const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    lineWidth,\n    controlHeight,\n    controlHeightSM,\n    controlHeightLG,\n    paddingXXS,\n    controlPaddingHorizontal,\n    zIndexPopupBase,\n    colorText,\n    fontWeightStrong,\n    controlItemBgActive,\n    controlItemBgHover,\n    colorBgContainer,\n    colorFillSecondary,\n    colorBgContainerDisabled,\n    colorTextDisabled\n  } = token;\n  // Item height default use `controlHeight - 2 * paddingXXS`,\n  // but some case `paddingXXS=0`.\n  // Let's fallback it.\n  const dblPaddingXXS = paddingXXS * 2;\n  const dblLineWidth = lineWidth * 2;\n  const multipleItemHeight = Math.min(controlHeight - dblPaddingXXS, controlHeight - dblLineWidth);\n  const multipleItemHeightSM = Math.min(controlHeightSM - dblPaddingXXS, controlHeightSM - dblLineWidth);\n  const multipleItemHeightLG = Math.min(controlHeightLG - dblPaddingXXS, controlHeightLG - dblLineWidth);\n  // FIXED_ITEM_MARGIN is a hardcode calculation since calc not support rounding\n  const INTERNAL_FIXED_ITEM_MARGIN = Math.floor(paddingXXS / 2);\n  return {\n    INTERNAL_FIXED_ITEM_MARGIN,\n    zIndexPopup: zIndexPopupBase + 50,\n    optionSelectedColor: colorText,\n    optionSelectedFontWeight: fontWeightStrong,\n    optionSelectedBg: controlItemBgActive,\n    optionActiveBg: controlItemBgHover,\n    optionPadding: `${(controlHeight - fontSize * lineHeight) / 2}px ${controlPaddingHorizontal}px`,\n    optionFontSize: fontSize,\n    optionLineHeight: lineHeight,\n    optionHeight: controlHeight,\n    selectorBg: colorBgContainer,\n    clearBg: colorBgContainer,\n    singleItemHeightLG: controlHeightLG,\n    multipleItemBg: colorFillSecondary,\n    multipleItemBorderColor: 'transparent',\n    multipleItemHeight,\n    multipleItemHeightSM,\n    multipleItemHeightLG,\n    multipleSelectorBgDisabled: colorBgContainerDisabled,\n    multipleItemColorDisabled: colorTextDisabled,\n    multipleItemBorderColorDisabled: 'transparent',\n    showArrowPaddingInlineEnd: Math.ceil(token.fontSize * 1.25)\n  };\n};"]},"metadata":{},"sourceType":"module"}