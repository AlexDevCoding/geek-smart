{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Downloads\\\\Login_React (Desarrollo)\\\\Login_React\\\\login_react\\\\src\\\\components\\\\Listar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Button, Input, Space, Table } from 'antd';\nimport Highlighter from 'react-highlight-words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Joe Black',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Jim Green',\n  age: 32,\n  address: 'Sydney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Jim Red',\n  age: 32,\n  address: 'London No. 2 Lake Park'\n}];\n\nconst Listar = () => {\n  _s();\n\n  const [searchText, setSearchText] = useState('');\n  const [searchedColumn, setSearchedColumn] = useState('');\n  const searchInput = useRef(null);\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = clearFilters => {\n    clearFilters();\n    setSearchText('');\n  };\n\n  const getColumnSearchProps = dataIndex => ({\n    filterDropdown: _ref => {\n      let {\n        setSelectedKeys,\n        selectedKeys,\n        confirm,\n        clearFilters,\n        close\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          padding: 8\n        },\n        onKeyDown: e => e.stopPropagation(),\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          ref: searchInput,\n          placeholder: `Search ${dataIndex}`,\n          value: selectedKeys[0],\n          onChange: e => setSelectedKeys(e.target.value ? [e.target.value] : []),\n          onPressEnter: () => handleSearch(selectedKeys, confirm, dataIndex),\n          style: {\n            marginBottom: 8,\n            display: 'block'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Space, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            onClick: () => handleSearch(selectedKeys, confirm, dataIndex),\n            icon: /*#__PURE__*/_jsxDEV(SearchOutlined, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 19\n            }, this),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => clearFilters && handleReset(clearFilters),\n            size: \"small\",\n            style: {\n              width: 90\n            },\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              confirm({\n                closeDropdown: false\n              });\n              setSearchText(selectedKeys[0]);\n              setSearchedColumn(dataIndex);\n            },\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"link\",\n            size: \"small\",\n            onClick: () => {\n              close();\n            },\n            children: \"close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    },\n    filterIcon: filtered => /*#__PURE__*/_jsxDEV(SearchOutlined, {\n      style: {\n        color: filtered ? '#1677ff' : undefined\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this),\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: visible => {\n      if (visible) {\n        setTimeout(() => {\n          var _searchInput$current;\n\n          return (_searchInput$current = searchInput.current) === null || _searchInput$current === void 0 ? void 0 : _searchInput$current.select();\n        }, 100);\n      }\n    },\n    render: text => searchedColumn === dataIndex ? /*#__PURE__*/_jsxDEV(Highlighter, {\n      highlightStyle: {\n        backgroundColor: '#ffc069',\n        padding: 0\n      },\n      searchWords: [searchText],\n      autoEscape: true,\n      textToHighlight: text ? text.toString() : ''\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 9\n    }, this) : text\n  });\n\n  const columns = [{\n    title: 'Name',\n    dataIndex: 'name',\n    key: 'name',\n    width: '30%',\n    ...getColumnSearchProps('name')\n  }, {\n    title: 'Age',\n    dataIndex: 'age',\n    key: 'age',\n    width: '20%',\n    ...getColumnSearchProps('age')\n  }, {\n    title: 'Address',\n    dataIndex: 'address',\n    key: 'address',\n    ...getColumnSearchProps('address'),\n    sorter: (a, b) => a.address.length - b.address.length,\n    sortDirections: ['descend', 'ascend']\n  }];\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    dataSource: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Listar, \"spMK7BeN8WJUMkgVB09NuE6C1x0=\");\n\n_c = Listar;\nexport default Listar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Listar\");","map":{"version":3,"sources":["C:/Users/david/Downloads/Login_React (Desarrollo)/Login_React/login_react/src/components/Listar.jsx"],"names":["React","useRef","useState","SearchOutlined","Button","Input","Space","Table","Highlighter","data","key","name","age","address","Listar","searchText","setSearchText","searchedColumn","setSearchedColumn","searchInput","handleSearch","selectedKeys","confirm","dataIndex","handleReset","clearFilters","getColumnSearchProps","filterDropdown","setSelectedKeys","close","padding","e","stopPropagation","target","value","marginBottom","display","width","closeDropdown","filterIcon","filtered","color","undefined","onFilter","record","toString","toLowerCase","includes","onFilterDropdownOpenChange","visible","setTimeout","current","select","render","text","backgroundColor","columns","title","sorter","a","b","length","sortDirections"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport { SearchOutlined } from '@ant-design/icons';\r\nimport { Button, Input, Space, Table } from 'antd';\r\nimport Highlighter from 'react-highlight-words';\r\n\r\n\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Joe Black',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Jim Green',\r\n    age: 32,\r\n    address: 'Sydney No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'Jim Red',\r\n    age: 32,\r\n    address: 'London No. 2 Lake Park',\r\n  },\r\n];\r\nconst Listar = () => {\r\n  const [searchText, setSearchText] = useState('');\r\n  const [searchedColumn, setSearchedColumn] = useState('');\r\n  const searchInput = useRef(null);\r\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    setSearchText(selectedKeys[0]);\r\n    setSearchedColumn(dataIndex);\r\n  };\r\n  const handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    setSearchText('');\r\n  };\r\n  const getColumnSearchProps = (dataIndex) => ({\r\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters, close }) => (\r\n      <div\r\n        style={{\r\n          padding: 8,\r\n        }}\r\n        onKeyDown={(e) => e.stopPropagation()}\r\n      >\r\n        <Input\r\n          ref={searchInput}\r\n          placeholder={`Search ${dataIndex}`}\r\n          value={selectedKeys[0]}\r\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\r\n          onPressEnter={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n          style={{\r\n            marginBottom: 8,\r\n            display: 'block',\r\n          }}\r\n        />\r\n        <Space>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => handleSearch(selectedKeys, confirm, dataIndex)}\r\n            icon={<SearchOutlined />}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Search\r\n          </Button>\r\n          <Button\r\n            onClick={() => clearFilters && handleReset(clearFilters)}\r\n            size=\"small\"\r\n            style={{\r\n              width: 90,\r\n            }}\r\n          >\r\n            Reset\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              confirm({\r\n                closeDropdown: false,\r\n              });\r\n              setSearchText(selectedKeys[0]);\r\n              setSearchedColumn(dataIndex);\r\n            }}\r\n          >\r\n            Filter\r\n          </Button>\r\n          <Button\r\n            type=\"link\"\r\n            size=\"small\"\r\n            onClick={() => {\r\n              close();\r\n            }}\r\n          >\r\n            close\r\n          </Button>\r\n        </Space>\r\n      </div>\r\n    ),\r\n    filterIcon: (filtered) => (\r\n      <SearchOutlined\r\n        style={{\r\n          color: filtered ? '#1677ff' : undefined,\r\n        }}\r\n      />\r\n    ),\r\n    onFilter: (value, record) =>\r\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\r\n    onFilterDropdownOpenChange: (visible) => {\r\n      if (visible) {\r\n        setTimeout(() => searchInput.current?.select(), 100);\r\n      }\r\n    },\r\n    render: (text) =>\r\n      searchedColumn === dataIndex ? (\r\n        <Highlighter\r\n          highlightStyle={{\r\n            backgroundColor: '#ffc069',\r\n            padding: 0,\r\n          }}\r\n          searchWords={[searchText]}\r\n          autoEscape\r\n          textToHighlight={text ? text.toString() : ''}\r\n        />\r\n      ) : (\r\n        text\r\n      ),\r\n  });\r\n  const columns = [\r\n    {\r\n      title: 'Name',\r\n      dataIndex: 'name',\r\n      key: 'name',\r\n      width: '30%',\r\n      ...getColumnSearchProps('name'),\r\n    },\r\n    {\r\n      title: 'Age',\r\n      dataIndex: 'age',\r\n      key: 'age',\r\n      width: '20%',\r\n      ...getColumnSearchProps('age'),\r\n    },\r\n    {\r\n      title: 'Address',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      ...getColumnSearchProps('address'),\r\n      sorter: (a, b) => a.address.length - b.address.length,\r\n      sortDirections: ['descend', 'ascend'],\r\n    },\r\n  ];\r\n  return <Table columns={columns} dataSource={data} />;\r\n};\r\nexport default Listar;"]},"metadata":{},"sourceType":"module"}