{"ast":null,"code":"\"use client\";\n\nimport React, { forwardRef } from 'react';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    style,\n    iconClassName,\n    iconPosition = 'start'\n  } = props;\n  const mergedIconCls = classNames(className, {\n    [`${prefixCls}-loading-icon-end`]: iconPosition === 'end',\n    [`${prefixCls}-loading-icon`]: iconPosition === 'start'\n  });\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\n\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\n\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\n\nconst LoadingIcon = props => {\n  const {\n    prefixCls,\n    loading,\n    existIcon,\n    className,\n    style,\n    iconPosition\n  } = props;\n  const visible = !!loading;\n\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      iconPosition: iconPosition\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // We do not really use this motionName\n    motionName: `${prefixCls}-loading-icon-motion`,\n    motionLeave: visible,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, (_ref, ref) => {\n    let {\n      className: motionCls,\n      style: motionStyle\n    } = _ref;\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: Object.assign(Object.assign({}, style), motionStyle),\n      ref: ref,\n      iconClassName: motionCls,\n      iconPosition: iconPosition\n    });\n  });\n};\n\nexport default LoadingIcon;","map":{"version":3,"sources":["C:/Users/david/Documents/GitHub/geek-smart/node_modules/antd/es/button/LoadingIcon.js"],"names":["React","forwardRef","LoadingOutlined","classNames","CSSMotion","IconWrapper","InnerLoadingIcon","props","ref","prefixCls","className","style","iconClassName","iconPosition","mergedIconCls","createElement","getCollapsedWidth","width","opacity","transform","getRealWidth","node","scrollWidth","LoadingIcon","loading","existIcon","visible","motionName","motionLeave","removeOnLeave","onAppearStart","onAppearActive","onEnterStart","onEnterActive","onLeaveStart","onLeaveActive","_ref","motionCls","motionStyle","Object","assign"],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { forwardRef } from 'react';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport IconWrapper from './IconWrapper';\nconst InnerLoadingIcon = /*#__PURE__*/forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    style,\n    iconClassName,\n    iconPosition = 'start'\n  } = props;\n  const mergedIconCls = classNames(className, {\n    [`${prefixCls}-loading-icon-end`]: iconPosition === 'end',\n    [`${prefixCls}-loading-icon`]: iconPosition === 'start'\n  });\n  return /*#__PURE__*/React.createElement(IconWrapper, {\n    prefixCls: prefixCls,\n    className: mergedIconCls,\n    style: style,\n    ref: ref\n  }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: iconClassName\n  }));\n});\nconst getCollapsedWidth = () => ({\n  width: 0,\n  opacity: 0,\n  transform: 'scale(0)'\n});\nconst getRealWidth = node => ({\n  width: node.scrollWidth,\n  opacity: 1,\n  transform: 'scale(1)'\n});\nconst LoadingIcon = props => {\n  const {\n    prefixCls,\n    loading,\n    existIcon,\n    className,\n    style,\n    iconPosition\n  } = props;\n  const visible = !!loading;\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      iconPosition: iconPosition\n    });\n  }\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible,\n    // We do not really use this motionName\n    motionName: `${prefixCls}-loading-icon-motion`,\n    motionLeave: visible,\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, (_ref, ref) => {\n    let {\n      className: motionCls,\n      style: motionStyle\n    } = _ref;\n    return /*#__PURE__*/React.createElement(InnerLoadingIcon, {\n      prefixCls: prefixCls,\n      className: className,\n      style: Object.assign(Object.assign({}, style), motionStyle),\n      ref: ref,\n      iconClassName: motionCls,\n      iconPosition: iconPosition\n    });\n  });\n};\nexport default LoadingIcon;"]},"metadata":{},"sourceType":"module"}