{"ast":null,"code":"import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genPresetColor, genStyleHooks, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\n\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeShadowSize,\n    motionDurationSlow,\n    textFontSize,\n    textFontSizeSM,\n    statusSize,\n    dotSize,\n    textFontWeight,\n    indicatorHeight,\n    indicatorHeightSM,\n    marginXS,\n    calc\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        },\n        'a:hover &': {\n          background: darkColor\n        }\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        display: 'inline-flex',\n        justifyContent: 'center',\n        zIndex: token.indicatorZIndex,\n        minWidth: indicatorHeight,\n        height: indicatorHeight,\n        color: token.badgeTextColor,\n        fontWeight: textFontWeight,\n        fontSize: textFontSize,\n        lineHeight: unit(indicatorHeight),\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: calc(indicatorHeight).div(2).equal(),\n        boxShadow: `0 0 0 ${unit(badgeShadowSize)} ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: indicatorHeightSM,\n        height: indicatorHeightSM,\n        fontSize: textFontSizeSM,\n        lineHeight: unit(indicatorHeightSM),\n        borderRadius: calc(indicatorHeightSM).div(2).equal()\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${unit(token.paddingXS)}`,\n        bdi: {\n          unicodeBidi: 'plaintext'\n        }\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.indicatorZIndex,\n        width: dotSize,\n        minWidth: dotSize,\n        height: dotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${unit(badgeShadowSize)} ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          // Magic number, but seems better experience\n          display: 'inline-block',\n          width: statusSize,\n          height: statusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorInfo,\n          backgroundColor: token.colorInfo,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: indicatorHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: indicatorHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    })\n  };\n}; // ============================== Export ==============================\n\n\nexport const prepareToken = token => {\n  const {\n    fontHeight,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = fontHeight;\n  const badgeShadowSize = lineWidth;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeTextColor,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return badgeToken;\n};\nexport const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth\n  } = token;\n  return {\n    indicatorZIndex: 'auto',\n    indicatorHeight: Math.round(fontSize * lineHeight) - 2 * lineWidth,\n    indicatorHeightSM: fontSize,\n    dotSize: fontSizeSM / 2,\n    textFontSize: fontSizeSM,\n    textFontSizeSM: fontSizeSM,\n    textFontWeight: 'normal',\n    statusSize: fontSizeSM / 2\n  };\n};\nexport default genStyleHooks('Badge', token => {\n  const badgeToken = prepareToken(token);\n  return genSharedBadgeStyle(badgeToken);\n}, prepareComponentToken);","map":{"version":3,"sources":["C:/Users/david/Downloads/Login_React (Desarrollo)/Login_React/login_react/node_modules/antd/es/badge/style/index.js"],"names":["Keyframes","unit","resetComponent","genPresetColor","genStyleHooks","mergeToken","antStatusProcessing","transform","opacity","antZoomBadgeIn","antZoomBadgeOut","antNoWrapperZoomBadgeIn","antNoWrapperZoomBadgeOut","antBadgeLoadingCircle","transformOrigin","genSharedBadgeStyle","token","componentCls","iconCls","antCls","badgeShadowSize","motionDurationSlow","textFontSize","textFontSizeSM","statusSize","dotSize","textFontWeight","indicatorHeight","indicatorHeightSM","marginXS","calc","numberPrefixCls","colorPreset","colorKey","_ref","darkColor","background","color","Object","assign","position","display","width","lineHeight","justifyContent","zIndex","indicatorZIndex","minWidth","height","badgeTextColor","fontWeight","fontSize","whiteSpace","textAlign","badgeColor","borderRadius","div","equal","boxShadow","badgeShadowColor","transition","motionDurationMid","a","badgeColorHover","padding","paddingXS","bdi","unicodeBidi","top","insetInlineEnd","animationName","animationDuration","animationIterationCount","animationTimingFunction","verticalAlign","backgroundColor","colorSuccess","overflow","colorInfo","insetInlineStart","borderWidth","borderStyle","borderColor","badgeProcessingDuration","content","colorTextPlaceholder","colorError","colorWarning","marginInlineStart","colorText","motionEaseOutBack","animationFillMode","WebkitTransformStyle","WebkitBackfaceVisibility","margin","direction","prepareToken","fontHeight","lineWidth","colorBorderBg","badgeFontHeight","colorBgContainer","colorErrorHover","badgeToken","badgeRibbonOffset","badgeRibbonCornerTransform","badgeRibbonCornerFilter","prepareComponentToken","fontSizeSM","Math","round"],"mappings":"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","sourcesContent":["import { Keyframes, unit } from '@ant-design/cssinjs';\nimport { resetComponent } from '../../style';\nimport { genPresetColor, genStyleHooks, mergeToken } from '../../theme/internal';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeShadowSize,\n    motionDurationSlow,\n    textFontSize,\n    textFontSizeSM,\n    statusSize,\n    dotSize,\n    textFontWeight,\n    indicatorHeight,\n    indicatorHeightSM,\n    marginXS,\n    calc\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`&${componentCls} ${componentCls}-color-${colorKey}`]: {\n        background: darkColor,\n        [`&:not(${componentCls}-count)`]: {\n          color: darkColor\n        },\n        'a:hover &': {\n          background: darkColor\n        }\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        display: 'inline-flex',\n        justifyContent: 'center',\n        zIndex: token.indicatorZIndex,\n        minWidth: indicatorHeight,\n        height: indicatorHeight,\n        color: token.badgeTextColor,\n        fontWeight: textFontWeight,\n        fontSize: textFontSize,\n        lineHeight: unit(indicatorHeight),\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: calc(indicatorHeight).div(2).equal(),\n        boxShadow: `0 0 0 ${unit(badgeShadowSize)} ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: indicatorHeightSM,\n        height: indicatorHeightSM,\n        fontSize: textFontSizeSM,\n        lineHeight: unit(indicatorHeightSM),\n        borderRadius: calc(indicatorHeightSM).div(2).equal()\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${unit(token.paddingXS)}`,\n        bdi: {\n          unicodeBidi: 'plaintext'\n        }\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.indicatorZIndex,\n        width: dotSize,\n        minWidth: dotSize,\n        height: dotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${unit(badgeShadowSize)} ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`&${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: '1s',\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          // Magic number, but seems better experience\n          display: 'inline-block',\n          width: statusSize,\n          height: statusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          overflow: 'visible',\n          color: token.colorInfo,\n          backgroundColor: token.colorInfo,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: indicatorHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: indicatorHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport const prepareToken = token => {\n  const {\n    fontHeight,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = fontHeight;\n  const badgeShadowSize = lineWidth;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeTextColor,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return badgeToken;\n};\nexport const prepareComponentToken = token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth\n  } = token;\n  return {\n    indicatorZIndex: 'auto',\n    indicatorHeight: Math.round(fontSize * lineHeight) - 2 * lineWidth,\n    indicatorHeightSM: fontSize,\n    dotSize: fontSizeSM / 2,\n    textFontSize: fontSizeSM,\n    textFontSizeSM: fontSizeSM,\n    textFontWeight: 'normal',\n    statusSize: fontSizeSM / 2\n  };\n};\nexport default genStyleHooks('Badge', token => {\n  const badgeToken = prepareToken(token);\n  return genSharedBadgeStyle(badgeToken);\n}, prepareComponentToken);"]},"metadata":{},"sourceType":"module"}