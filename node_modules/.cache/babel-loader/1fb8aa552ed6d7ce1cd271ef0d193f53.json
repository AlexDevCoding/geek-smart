{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\david\\\\Documents\\\\GitHub\\\\geek-smart\\\\src\\\\components\\\\provedores\\\\provedore-list.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Divider, Radio, Table } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Provedores',\n  dataIndex: 'provedores',\n  render: text => /*#__PURE__*/_jsxDEV(\"a\", {\n    children: text\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 23\n  }, this)\n}, {\n  title: 'categoria',\n  dataIndex: 'categoria'\n}, {\n  title: 'Numero de telefono',\n  dataIndex: 'Numero de telefono'\n}, {\n  title: 'Numero de telefono',\n  dataIndex: 'Numero de telefono'\n}];\nconst data = [{\n  key: '1',\n  name: 'John Brown',\n  age: 32,\n  address: 'New York No. 1 Lake Park'\n}, {\n  key: '2',\n  name: 'Jim Green',\n  age: 42,\n  address: 'London No. 1 Lake Park'\n}, {\n  key: '3',\n  name: 'Joe Black',\n  age: 32,\n  address: 'Sydney No. 1 Lake Park'\n}, {\n  key: '4',\n  name: 'Disabled User',\n  age: 99,\n  address: 'Sydney No. 1 Lake Park'\n}]; // rowSelection object indicates the need for row selection\n\nconst rowSelection = {\n  onChange: (selectedRowKeys, selectedRows) => {\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\n  },\n  getCheckboxProps: record => ({\n    disabled: record.name === 'Disabled User',\n    // Column configuration not to be checked\n    name: record.name\n  })\n};\nexport const Provelist = () => {\n  _s();\n\n  const [selectionType, setSelectionType] = useState('checkbox');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      rowSelection: {\n        type: selectionType,\n        ...rowSelection\n      },\n      columns: columns,\n      dataSource: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Provelist, \"uKhWbRYZh0yYhpJtLsBDfeqd9AU=\");\n\n_c = Provelist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Provelist\");","map":{"version":3,"sources":["C:/Users/david/Documents/GitHub/geek-smart/src/components/provedores/provedore-list.jsx"],"names":["React","useState","Divider","Radio","Table","columns","title","dataIndex","render","text","data","key","name","age","address","rowSelection","onChange","selectedRowKeys","selectedRows","console","log","getCheckboxProps","record","disabled","Provelist","selectionType","setSelectionType","type"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,KAAzB,QAAsC,MAAtC;;AACA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,KAAK,EAAE,YADT;AAEEC,EAAAA,SAAS,EAAE,YAFb;AAGEC,EAAAA,MAAM,EAAGC,IAAD,iBAAU;AAAA,cAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AAHpB,CADc,EAMd;AACEH,EAAAA,KAAK,EAAE,WADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CANc,EAUd;AACED,EAAAA,KAAK,EAAE,oBADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAVc,EAcd;AACED,EAAAA,KAAK,EAAE,oBADT;AAEEC,EAAAA,SAAS,EAAE;AAFb,CAdc,CAAhB;AAmBA,MAAMG,IAAI,GAAG,CACX;AACEC,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,YAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,OAAO,EAAE;AAJX,CADW,EAOX;AACEH,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAPW,EAaX;AACEH,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,WAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAbW,EAmBX;AACEH,EAAAA,GAAG,EAAE,GADP;AAEEC,EAAAA,IAAI,EAAE,eAFR;AAGEC,EAAAA,GAAG,EAAE,EAHP;AAIEC,EAAAA,OAAO,EAAE;AAJX,CAnBW,CAAb,C,CA2BA;;AACA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,CAACC,eAAD,EAAkBC,YAAlB,KAAmC;AAC3CC,IAAAA,OAAO,CAACC,GAAR,CAAa,oBAAmBH,eAAgB,EAAhD,EAAmD,gBAAnD,EAAqEC,YAArE;AACD,GAHkB;AAInBG,EAAAA,gBAAgB,EAAGC,MAAD,KAAa;AAC7BC,IAAAA,QAAQ,EAAED,MAAM,CAACV,IAAP,KAAgB,eADG;AAE7B;AACAA,IAAAA,IAAI,EAAEU,MAAM,CAACV;AAHgB,GAAb;AAJC,CAArB;AAUA,OAAO,MAAMY,SAAS,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCzB,QAAQ,CAAC,UAAD,CAAlD;AACA,sBACE;AAAA,2BAIE,QAAC,KAAD;AACE,MAAA,YAAY,EAAE;AACZ0B,QAAAA,IAAI,EAAEF,aADM;AAEZ,WAAGV;AAFS,OADhB;AAKE,MAAA,OAAO,EAAEV,OALX;AAME,MAAA,UAAU,EAAEK;AANd;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAjBM;;GAAMc,S;;KAAAA,S","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { Divider, Radio, Table } from 'antd';\r\nconst columns = [\r\n  {\r\n    title: 'Provedores',\r\n    dataIndex: 'provedores',\r\n    render: (text) => <a>{text}</a>,\r\n  },\r\n  {\r\n    title: 'categoria',\r\n    dataIndex: 'categoria',\r\n  },\r\n  {\r\n    title: 'Numero de telefono',\r\n    dataIndex: 'Numero de telefono',\r\n  },\r\n  {\r\n    title: 'Numero de telefono',\r\n    dataIndex: 'Numero de telefono',\r\n  },\r\n];\r\nconst data = [\r\n  {\r\n    key: '1',\r\n    name: 'John Brown',\r\n    age: 32,\r\n    address: 'New York No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '2',\r\n    name: 'Jim Green',\r\n    age: 42,\r\n    address: 'London No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '3',\r\n    name: 'Joe Black',\r\n    age: 32,\r\n    address: 'Sydney No. 1 Lake Park',\r\n  },\r\n  {\r\n    key: '4',\r\n    name: 'Disabled User',\r\n    age: 99,\r\n    address: 'Sydney No. 1 Lake Park',\r\n  },\r\n];\r\n\r\n// rowSelection object indicates the need for row selection\r\nconst rowSelection = {\r\n  onChange: (selectedRowKeys, selectedRows) => {\r\n    console.log(`selectedRowKeys: ${selectedRowKeys}`, 'selectedRows: ', selectedRows);\r\n  },\r\n  getCheckboxProps: (record) => ({\r\n    disabled: record.name === 'Disabled User',\r\n    // Column configuration not to be checked\r\n    name: record.name,\r\n  }),\r\n};\r\nexport const Provelist = () => {\r\n  const [selectionType, setSelectionType] = useState('checkbox');\r\n  return (\r\n    <div>\r\n      \r\n\r\n\r\n      <Table\r\n        rowSelection={{\r\n          type: selectionType,\r\n          ...rowSelection,\r\n        }}\r\n        columns={columns}\r\n        dataSource={data}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}